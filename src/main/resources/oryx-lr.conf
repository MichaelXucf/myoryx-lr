# Copyright (c) 2014, Cloudera, Inc. All Rights Reserved.
#
# Cloudera, Inc. licenses this file to you under the Apache License,
# Version 2.0 (the "License"). You may not use this file except in
# compliance with the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for
# the specific language governing permissions and limitations under the
# License.

# A very basic example config file configuring only the essential elements to
# run an ALS application.

# It's possible to specify reusable values:
kafka-brokers = "tserver1:9092,tserver2:9092,tserver3:9092"
zk-servers = "tserver1,tserver2,tserver3:2181/kafka"
hdfs-base = "hdfs:///user/oryx/logisticregression"

oryx {
  id = "LogisticRegression-Example"
  als {
    rescorer-provider-class = null
  }
  input-topic {
    broker = ${kafka-brokers}
    lock = {
      master = ${zk-servers}
    }
    message = {
      # Input topic
      topic = "Logistic-Regression-Input"
    }
  }
  update-topic {
    broker = ${kafka-brokers}
    lock = {
      master = ${zk-servers}
    }
    message = {
      # Update topic
      # Can be null to disable publishing to an update topic
      topic = "Logistic-Regression-Update"
    }
  }
  batch {
    streaming {
      master = "yarn"
      deploy-mode = "cluster"
      generation-interval-sec = 120
      num-executors = 3
      executor-cores = 1
      executor-memory = "1g"
    }
    update-class = "com.cloudera.oryx.example.batch.LRScalaUpdate"
    storage {
      data-dir =  ${hdfs-base}"/data/"
      model-dir = ${hdfs-base}"/model/"
    }
    ui {
      port = 4040
    }
  }
  speed {
    streaming {
      master = "yarn"
      deploy-mode = "cluster"
      generation-interval-sec = 10
      num-executors = 3
      executor-cores = 1
      executor-memory = "1g"
    }
    model-manager-class = "com.cloudera.oryx.example.speed.LRScalaSpeedModelManager"
    ui {
      port = 4041
    }
  }
  serving {
    model-manager-class = "com.cloudera.oryx.example.serving.model.LRScalaServingModelManager"
    application-resources = "com.cloudera.oryx.app.serving,com.cloudera.oryx.app.serving.classreg"
    api {
      port = 8091
    }
  }
  input-schema = {
    num-features = 8
  }

  lr {
    hyperparams {
      "numClasses" = 7
    }
  }
}
